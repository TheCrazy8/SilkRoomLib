name: Build and Release SilksongRooms

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            7.0.x
            6.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\NuGet\v3-cache
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        working-directory: content/SilksongRooms
        run: |
          dotnet restore SilksongRooms.1.csproj -p:game-version=latest -p:UnityVersion=6000.*

      - name: Build (Release)
        working-directory: content/SilksongRooms
        run: |
          dotnet build SilksongRooms.1.csproj -c Release -p:SkipCopyMod=true -p:game-version=latest -p:UnityVersion=6000.* --nologo --no-restore

      - name: Collect artifacts
        shell: pwsh
        run: |
          $out = "${{ github.workspace }}\artifacts"
          New-Item -ItemType Directory -Path $out -Force | Out-Null
          Copy-Item "content/SilksongRooms/bin/Release/**/SilksongRooms.1.dll" $out -Recurse -Force -ErrorAction SilentlyContinue
          Copy-Item "content/SilksongRooms/bin/Release/**/SilksongRooms.1.pdb" $out -Recurse -Force -ErrorAction SilentlyContinue
          if (Test-Path "content/SilksongRooms/bin/Publish/SilksongRooms.1.zip") { Copy-Item "content/SilksongRooms/bin/Publish/SilksongRooms.1.zip" $out }
          Get-ChildItem $out -Recurse | Format-List FullName

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SilksongRooms-artifacts
          path: artifacts
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: windows-latest
    # Release on any push (every commit). Avoid PR events.
    if: github.event_name == 'push'
    needs: [build]
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: SilksongRooms-artifacts
          path: artifacts

      - name: Generate random HEX and tag name
        id: meta
        shell: pwsh
        run: |
          # Random 6-digit hex color
          $hex = -join (1..6 | ForEach-Object { '{0:x}' -f (Get-Random -Minimum 0 -Maximum 16) })
          Write-Host "Random HEX color: #$hex"

          # Create a unique tag name for this commit
          $branch = $env:GITHUB_REF_NAME -replace '[^A-Za-z0-9._-]','-'
          $sha7 = $env:GITHUB_SHA.Substring(0,7)
          $run = $env:GITHUB_RUN_NUMBER
          $tag = "auto-$branch-$sha7-$run"
          Write-Host "Tag name: $tag"

          # Publish step outputs for later steps
          $out = $env:GITHUB_OUTPUT
          Add-Content -Path $out -Value "hex_color=$hex"
          Add-Content -Path $out -Value "tag_name=$tag"

      - name: Compose release notes
        id: notes
        env:
          HEX: ${{ steps.meta.outputs.hex_color }}
          TAG: ${{ steps.meta.outputs.tag_name }}
        shell: pwsh
        run: |
          $hex = "$env:HEX"
          $tag = "$env:TAG"
          $nl = "`n"
          $body = @(
            "Automated release for $tag",
            "",
            "Color: #$hex",
            "",
            "![color](https://img.shields.io/badge/color-%23$hex-$hex?style=for-the-badge)",
            "",
            "Artifacts include the DLL, PDB, and optional zip (if produced)."
          ) -join $nl
          Set-Content -Path release-notes.md -Value $body -Encoding UTF8

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: SilksongRooms.1 ${{ steps.meta.outputs.tag_name }} â€” #${{ steps.meta.outputs.hex_color }}
          tag_name: ${{ steps.meta.outputs.tag_name }}
          body_path: release-notes.md
          files: |
            artifacts/**
