<Project Sdk="Microsoft.NET.Sdk">

  <!-- Import silksong path props only if present to allow CI builds. -->
  <Import Condition="Exists('SilksongPath.props')" Project="SilksongPath.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <AssemblyName>SilkRoomUtils</AssemblyName>
    <RestoreAdditionalProjectSources>
      https://nuget.bepinex.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <RestorePackagesWithLockFile Condition="'$(game-version)' == 'latest'">True</RestorePackagesWithLockFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PathMap Condition="'$(Configuration)' == 'Release'">$(MSBuildProjectDirectory)=/</PathMap>
    <!-- Default Unity version for CI/builds when not provided externally -->
    <UnityVersion Condition="'$(UnityVersion)' == ''">6000.*</UnityVersion>
  </PropertyGroup>

  <!-- Enable simple compile-time Unity stubs for CI when real Unity refs are unavailable -->
  <PropertyGroup Condition="'$(UseUnityStubs)' == 'true'">
    <DefineConstants>$(DefineConstants);USE_UNITY_STUBS</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="Hamunii.BepInEx.AutoPlugin" Version="2.0.1" PrivateAssets="all" />
    <!-- Use explicit Unity version if provided; otherwise default to 6000.* (Unity 6) -->
    <PackageReference Include="UnityEngine.Modules" Version="$(UnityVersion)" IncludeAssets="compile" />
    <PackageReference Include="Silksong.GameLibs" Version="*-*" PrivateAssets="all" Condition="'$(game-version)' == 'latest'" />
    <PackageReference Include="Silksong.GameLibs" Version="1.1.0-silksongSilksongVersion" PrivateAssets="all" Condition="'$(game-version)' != 'latest'" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="UnityStubs.cs" Condition="'$(UseUnityStubs)' == 'true'" />
  </ItemGroup>

  <!-- Include Rooms content in publish/copy -->
  <ItemGroup>
    <RoomContent Include="Rooms\**\*" />
  </ItemGroup>

  <Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="'$(SkipCopyMod)' != 'true'">
    <ItemGroup>
      <Binaries Include="$(TargetPath)" />
      <Binaries Include="$(TargetDir)/$(TargetName).pdb" />
    </ItemGroup>

    <Copy SourceFiles="@(Binaries)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)" Condition="'$(SilksongFolder)' != '' And Exists('$(SilksongFolder)')" />

    <!-- Copy Rooms content alongside the plugin for easy distribution -->
    <Copy SourceFiles="@(RoomContent)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)/%(RecursiveDir)" SkipUnchangedFiles="true" Condition="'@(RoomContent)' != '' And '$(SilksongFolder)' != '' And Exists('$(SilksongFolder)')" />

    <PropertyGroup>
      <ExportFolder>bin/Publish</ExportFolder>
    </PropertyGroup>

    <RemoveDir Directories="$(IntermediateOutputPath)/archive" />
    <MakeDir Directories="$(ExportFolder)" />
    <Copy SourceFiles="@(Binaries)" DestinationFolder="$(IntermediateOutputPath)/archive" />
    <Copy SourceFiles="@(RoomContent)" DestinationFolder="$(IntermediateOutputPath)/archive/%(RecursiveDir)" SkipUnchangedFiles="true" Condition="'@(RoomContent)' != ''" />
    <ZipDirectory SourceDirectory="$(IntermediateOutputPath)/archive" DestinationFile="$(ExportFolder)/$(TargetName).zip" Overwrite="True" />
  </Target>

</Project>
